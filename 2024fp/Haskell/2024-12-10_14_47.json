{"message":"File 'Haskell/lib/typedtree.ml' doesn't have corresponding .mli interface","location":{"path":"Haskell/lib/typedtree.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Haskell/lib/pprint.ml' doesn't have corresponding .mli interface","location":{"path":"Haskell/lib/pprint.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun acc ->\n                                                       fun ty ->\n                                                         helper acc ty' as \n'helper'","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":89,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun name ->\n                                                       SMap.find name' as \n'SMap.find'","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":251,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":454,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":499,"column":1}}},"severity":"INFO"}
