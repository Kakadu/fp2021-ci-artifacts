{"message":"File 'Haskell/lib/pai.ml' doesn't have corresponding .mli interface","location":{"path":"Haskell/lib/pai.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Haskell/tests/tests/pprintast_test.ml' doesn't have corresponding .mli interface","location":{"path":"Haskell/tests/tests/pprintast_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Haskell/tests/tests/inferencer_test.ml' doesn't have corresponding .mli interface","location":{"path":"Haskell/tests/tests/inferencer_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun st -> m st' as \n'm'","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":485,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Haskell/lib/inferencer.ml","range":{"start":{"line":530,"column":1}}},"severity":"INFO"}
