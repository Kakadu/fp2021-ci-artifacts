{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'defered_frame' as follows:\ntype defered_frame = (value * value list)","location":{"path":"Go/lib/eval/evalMonad.ml","range":{"start":{"line":56,"column":1}}},"severity":"INFO"}
{"message":"Match is redundant. It's recommended to rewrite it as 'if MapIdent.mem ident env.var_map\nthen { env with var_map = (MapIdent.add ident value env.var_map) } :: lst\nelse env :: lst'","location":{"path":"Go/lib/eval/evalMonad.ml","range":{"start":{"line":566,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'builtin' as follows:\ntype builtin =\n  | Print \n  | Println \n  | Make \n  | Close \n  | Recover \n  | Len \n  | Panic ","location":{"path":"Go/lib/eval/evalMonad.mli","range":{"start":{"line":25,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'defered_frame' as follows:\ntype defered_frame = (value * value list)","location":{"path":"Go/lib/eval/evalMonad.mli","range":{"start":{"line":61,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun x ->\n                                                       retrieve_arg_value x' as \n'retrieve_arg_value'","location":{"path":"Go/lib/eval/eval.ml","range":{"start":{"line":442,"column":1}}},"severity":"INFO"}
