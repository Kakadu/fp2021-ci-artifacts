{"message":"Match is redundant. It's recommended to rewrite it as 'if String.ends_with ~suffix:sep line\nthen\n  (Buffer.add_substring b line 0 (len - sep_len);\n   Buffer.add_string b \"\\n\";\n   Input (Buffer.contents b))\nelse (Buffer.add_string b line; Buffer.add_string b \"\\n\"; fill_buffer b)'","location":{"path":"FSharpActivePatterns/lib/REPLUtils.ml","range":{"start":{"line":32,"column":1}}},"severity":"INFO"}
{"message":"Match is redundant. It's recommended to rewrite it as 'if is_continue\nthen (Buffer.add_string b (line ^ \"\\n\"); fill_buffer b)\nelse\n  (seek_in ic start_pos; Buffer.add_string b \"\\n\"; Input (Buffer.contents b))'","location":{"path":"FSharpActivePatterns/lib/REPLUtils.ml","range":{"start":{"line":60,"column":1}}},"severity":"INFO"}
{"message":"Match is redundant. It's recommended to rewrite it as 'if dump_parsetree\nthen\n  (print_construction std_formatter ast;\n   run_repl_helper run type_env value_env state values_acc)\nelse\n  (let result = run_interpreter type_env value_env state ast in\n   match result with\n   | (new_state, Error err) ->\n       (fprintf err_formatter\n          (CamlinternalFormatBasics.Format\n             ((CamlinternalFormatBasics.String_literal\n                 (\"Error occured: \",\n                   (CamlinternalFormatBasics.Alpha\n                      (CamlinternalFormatBasics.Char_literal\n                         ('\\n', CamlinternalFormatBasics.End_of_format))))),\n               \"Error occured: %a\\n\")) pp_global_error err;\n        print_flush ();\n        run_repl_helper run type_env value_env new_state values_acc)\n   | (new_state, Ok (new_type_env, new_value_env, evaled_names)) ->\n       (match ic with\n        | None ->\n            (Base.Map.iteri evaled_names\n               ~f:(fun ~key ->\n                     fun ~data ->\n                       let (t, v) = data in\n                       fprintf std_formatter\n                         (CamlinternalFormatBasics.Format\n                            ((CamlinternalFormatBasics.String_literal\n                                (\"val \",\n                                  (CamlinternalFormatBasics.String\n                                     (CamlinternalFormatBasics.No_padding,\n                                       (CamlinternalFormatBasics.String_literal\n                                          (\" : \",\n                                            (CamlinternalFormatBasics.Alpha\n                                               (CamlinternalFormatBasics.String_literal\n                                                  (\" = \",\n                                                    (CamlinternalFormatBasics.Alpha\n                                                       (CamlinternalFormatBasics.Char_literal\n                                                          ('\\n',\n                                                            CamlinternalFormatBasics.End_of_format)))))))))))),\n                              \"val %s : %a = %a\\n\")) key pp_typ t\n                         ValueEnv.pp_value v);\n             print_flush ();\n             run_repl_helper run new_type_env new_value_env new_state\n               values_acc)\n        | Some _ ->\n            let overwrite map1 map2 =\n              Base.Map.fold map2 ~init:map1\n                ~f:(fun ~key ->\n                      fun ~data -> fun map1 -> Base.Map.set map1 ~key ~data) in\n            let values_acc = overwrite values_acc evaled_names in\n            run_repl_helper run new_type_env new_value_env new_state\n              values_acc))'","location":{"path":"FSharpActivePatterns/lib/REPLUtils.ml","range":{"start":{"line":118,"column":1}}},"severity":"INFO"}
