{"message":"File 'EUsoltsev/lib/typing.ml' doesn't have corresponding .mli interface","location":{"path":"EUsoltsev/lib/typing.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'EUsoltsev/tests/parser_tests.ml' doesn't have corresponding .mli interface","location":{"path":"EUsoltsev/tests/parser_tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'EUsoltsev/tests/inferencer_tests.ml' doesn't have corresponding .mli interface","location":{"path":"EUsoltsev/tests/inferencer_tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"EUsoltsev/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"EUsoltsev/lib/typing.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":328,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun sub ->\n                                                       fun key ->\n                                                         Base.Map.find sub\n                                                           key' as 'Base.Map.find'","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":112,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun sub ->\n                                                       fun key ->\n                                                         Base.Map.remove sub\n                                                           key' as 'Base.Map.remove'","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":113,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":151,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun env ->\n                                                       fun k ->\n                                                         Base.Map.find env k' as \n'Base.Map.find'","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":193,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":253,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":303,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"EUsoltsev/lib/inferencer.ml","range":{"start":{"line":328,"column":1}}},"severity":"INFO"}
