{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/Pprint.ml","range":{"start":{"line":86,"column":1}}},"severity":"INFO"}
{"message":"","location":{"path":"Ocaml/lib/Pprint.ml","range":{"start":{"line":52,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ocaml/lib/Pprint.ml","range":{"start":{"line":74,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/Pprint.ml","range":{"start":{"line":86,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ocaml/lib/Pprint.ml","range":{"start":{"line":89,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun init -> go init' as \n'go'","location":{"path":"Ocaml/lib/parser.ml","range":{"start":{"line":16,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun init -> go init' as \n'go'","location":{"path":"Ocaml/lib/parser.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ocaml/lib/parser.ml","range":{"start":{"line":279,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ocaml/lib/parser.ml","range":{"start":{"line":376,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ocaml/lib/parser.ml","range":{"start":{"line":395,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/inferencer.ml","range":{"start":{"line":243,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/inferencer.ml","range":{"start":{"line":384,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/inferencer.ml","range":{"start":{"line":243,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ocaml/lib/inferencer.ml","range":{"start":{"line":384,"column":1}}},"severity":"INFO"}
