{"message":"Eta reduction proposed. It's recommended to rewrite 'fun init -> go init' as \n'go'","location":{"path":"aefjnvMl/lib/parser.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun p -> pconst p' as \n'pconst'","location":{"path":"aefjnvMl/lib/parser.ml","range":{"start":{"line":211,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun p ->\n                                                       fun tp ->\n                                                         pconstraint p tp' as \n'pconstraint'","location":{"path":"aefjnvMl/lib/parser.ml","range":{"start":{"line":225,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun c -> econst c' as \n'econst'","location":{"path":"aefjnvMl/lib/parser.ml","range":{"start":{"line":232,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun o ->\n                                                       fun l ->\n                                                         fun r ->\n                                                           ebinop o l r' as \n'ebinop'","location":{"path":"aefjnvMl/lib/parser.ml","range":{"start":{"line":359,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun acc ->\n                                                       fun t -> helper acc t' as \n'helper'","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":101,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun n -> tvar n' as \n'tvar'","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":118,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun xs ->\n                                                       fun k ->\n                                                         Map.remove xs k' as \n'Map.remove'","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":150,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun t -> helper t' as \n'helper'","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":160,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun xs ->\n                                                       fun name ->\n                                                         Map.find xs name' as \n'Map.find'","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":249,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"aefjnvMl/lib/inferencer.ml","range":{"start":{"line":620,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
