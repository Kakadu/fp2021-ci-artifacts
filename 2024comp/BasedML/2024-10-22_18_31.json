{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"BasedML/bin/LL.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"BasedML/bin/LL.ml","range":{"start":{"line":2,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"BasedML/bin/LL.ml","range":{"start":{"line":59,"column":1}}},"severity":"INFO"}
{"message":"Type name `typeName` should be in snake case","location":{"path":"BasedML/lib/ast/ast.ml","range":{"start":{"line":6,"column":1}}},"severity":"INFO","code":{"value":"camel_cased_types","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Type name `singleLet` should be in snake case","location":{"path":"BasedML/lib/ast/ast.ml","range":{"start":{"line":57,"column":1}}},"severity":"INFO","code":{"value":"camel_cased_types","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'pattern' as follows:\ntype pattern =\n  | PConstraint of pattern_no_constraint * typeName \n  | PNConstraint of pattern_no_constraint [@@deriving\n                                            show { with_path = false }]","location":{"path":"BasedML/lib/ast/ast.ml","range":{"start":{"line":28,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'let_declaration' as follows:\ntype let_declaration =\n  | DSingleLet of singleLet \n  | DMutualRecDecl of singleLet list [@@deriving show { with_path = false }]","location":{"path":"BasedML/lib/ast/ast.ml","range":{"start":{"line":57,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun st -> f st' as \n'f'","location":{"path":"BasedML/lib/common/stateMonad.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun init -> go init' as \n'go'","location":{"path":"BasedML/lib/parser/parser.ml","range":{"start":{"line":72,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"BasedML/lib/typeinference/typeinference.ml","range":{"start":{"line":61,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"BasedML/lib/typeinference/typeinference.ml","range":{"start":{"line":61,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"BasedML/lib/typeinference/typeinference.ml","range":{"start":{"line":186,"column":1}}},"severity":"INFO"}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"BasedML/lib/typeinference/substitution.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun subst ->\n                                                       fun tp ->\n                                                         apply_subst subst tp' as \n'apply_subst'","location":{"path":"BasedML/lib/typeinference/substitution.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"BasedML/lib/typeinference/generalise.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
