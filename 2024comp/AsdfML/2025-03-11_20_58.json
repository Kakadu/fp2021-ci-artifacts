{"message":"File 'AsdfML/lib/middleend/vars.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/vars.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/utils/utils.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/utils/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/std/std.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/std/std.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/utils/state.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/utils/state.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/simplify.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/simplify.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/riscv/riscv64.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/remove_patterns.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/remove_patterns.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/remove_match.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/remove_match.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/typing/pp_typing.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/typing/pp_typing.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/riscv/machine.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/riscv/machine.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/parsing/lexer.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/parsing/lexer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/lambda_lifting.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/lambda_lifting.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/riscv/emit.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/closure_conversion.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/closure_conversion.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/anf.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/lib/middleend/alpha.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/lib/middleend/alpha.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/anf/typecheck.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/anf/inline_anf.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/cc/inline_cc.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/infer/inline_inferencer.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/ll/inline_ll.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/parser/inline_parser.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/parser/inline_alpha.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/remove_pat_match/inline_remove_patterns.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/remove_pat_match/inline_remove_match.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'AsdfML/test/utils.ml' doesn't have corresponding .mli interface","location":{"path":"AsdfML/test/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/riscv/riscv.ml","range":{"start":{"line":14,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/riscv/riscv.ml","range":{"start":{"line":14,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/riscv/riscv.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/riscv/riscv.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":23,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":32,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":33,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":63,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":75,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":200,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":283,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/riscv64.ml","range":{"start":{"line":285,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/middleend/remove_match.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/middleend/remove_match.ml","range":{"start":{"line":174,"column":1}}},"severity":"INFO"}
{"message":"Type name `_menhir_cell0_option_BAR_` should be in snake case","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":567,"column":1}}},"severity":"INFO","code":{"value":"camel_cased_types","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1954,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":2064,"column":1}}},"severity":"INFO"}
{"message":"Identifier `_v_0` used somewhere else but supposed to be unused.","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":3382,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":5229,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":5817,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7144,"column":1}}},"severity":"INFO"}
{"message":"Identifier `_v_3` used somewhere else but supposed to be unused.","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7391,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Identifier `_v_3` used somewhere else but supposed to be unused.","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7484,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Identifier `_v_3` used somewhere else but supposed to be unused.","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7596,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7641,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7780,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"AsdfML/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":2,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite '_menhir_box_program', '_menhir_cell0_option_BAR_' as follows:\ntype _menhir_box_program =\n  | MenhirBox_program of Ast.program [@@unboxed ]\ntype 's _menhir_cell0_option_BAR_ =\n  | MenhirCell0_option_BAR_ of 's * unit option ","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":77,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1354,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":99,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1717,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":167,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1881,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":127,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1893,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":137,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":142,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1917,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.mly","range":{"start":{"line":148,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":1954,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":2044,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":2064,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":5229,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":5817,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7144,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7247,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7641,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/parsing/menhir.ml","range":{"start":{"line":7780,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"AsdfML/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"AsdfML/lib/parsing/menhir.mli","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/machine.ml","range":{"start":{"line":31,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"AsdfML/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should provide license information in second line (structure item)","location":{"path":"AsdfML/lib/parsing/lexer.mll","range":{"start":{"line":6,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Identifier `_pp` used somewhere else but supposed to be unused.","location":{"path":"AsdfML/lib/typing/inferencer.ml","range":{"start":{"line":312,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":76,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":12,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":14,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":24,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":26,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":26,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":41,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":69,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":76,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":82,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":87,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":151,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/riscv/emit.ml","range":{"start":{"line":176,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'cf_definition' as follows:\ntype cf_definition =\n  | CFLet of rec_flag * id * id list * cf_expr ","location":{"path":"AsdfML/lib/middleend/cf_ast.ml","range":{"start":{"line":7,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'PConst' has no documentation attribute","location":{"path":"AsdfML/lib/parsing/ast.mli","range":{"start":{"line":55,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":157,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":127,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"AsdfML/lib/middleend/anf.ml","range":{"start":{"line":157,"column":1}}},"severity":"INFO"}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":47,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":117,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":134,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":157,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":183,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":197,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":219,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":231,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":243,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":16,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":17,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"AsdfML/test/anf/typecheck.ml","range":{"start":{"line":18,"column":1}}},"severity":"INFO"}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":12,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":31,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":45,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":94,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":136,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":177,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":230,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":256,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/anf/inline_anf.ml","range":{"start":{"line":271,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":18,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":33,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":46,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":70,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":85,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":102,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":123,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":143,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":170,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/cc/inline_cc.ml","range":{"start":{"line":187,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":9,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":14,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":19,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":24,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":29,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":39,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":44,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":49,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":54,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":59,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":64,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":69,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":74,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":79,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":84,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":95,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":100,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":105,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":110,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":120,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":131,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":150,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":171,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":192,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":197,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":202,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":207,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":212,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":217,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":222,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":227,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":232,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":237,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":242,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":247,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":263,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":280,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":291,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":296,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":313,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":321,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":357,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":362,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":367,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":373,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":384,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":397,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":410,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":417,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":429,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":445,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/infer/inline_inferencer.ml","range":{"start":{"line":458,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":35,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":43,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":58,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":79,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":104,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":118,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":136,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":161,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":184,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":200,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":220,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":239,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":259,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":283,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":306,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":321,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":333,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":360,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/ll/inline_ll.ml","range":{"start":{"line":381,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":9,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":25,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":39,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":48,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":56,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":61,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":66,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":71,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":81,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":92,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":105,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":113,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":118,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":125,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":130,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":135,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":141,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":147,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":153,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":168,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":178,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":195,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":201,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":213,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":220,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":238,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":243,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":262,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":309,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":328,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":333,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":338,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":351,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":360,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_parser.ml","range":{"start":{"line":365,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":17,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":28,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":35,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":178,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":193,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":212,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/parser/inline_alpha.ml","range":{"start":{"line":233,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":31,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":43,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":55,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":67,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":83,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":94,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":106,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":121,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":133,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":149,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":161,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":173,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":185,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":207,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":219,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":231,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":250,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_patterns.ml","range":{"start":{"line":271,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":52,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":76,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":95,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":136,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":167,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":190,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":217,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":254,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":290,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":309,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":339,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":354,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":374,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"AsdfML/test/remove_pat_match/inline_remove_match.ml","range":{"start":{"line":397,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
