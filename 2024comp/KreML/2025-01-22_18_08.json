{"message":"File 'KreML/lib/Utils.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/lib/Ast_printer.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/lib/Ast_printer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/test/Parser_test.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/test/Parser_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/test/Inferencer_test.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/test/Inferencer_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":7,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun st -> m st' as \n'm'","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":44,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun u -> return u' as \n'return'","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":53,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if ... then false' smells bad\n","location":{"path":"KreML/lib/Inferencer.ml","range":{"start":{"line":319,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'fun_with_env' as follows:\ntype fun_with_env =\n  {\n  arg: ident ;\n  captured_args: ident list ;\n  arity: int ;\n  body: flambda }","location":{"path":"KreML/lib/middle_end/Flambda.ml","range":{"start":{"line":37,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'fun_with_env' as follows:\ntype fun_with_env =\n  {\n  arg: ident ;\n  captured_args: ident list ;\n  arity: int ;\n  body: flambda }","location":{"path":"KreML/lib/middle_end/Flambda.mli","range":{"start":{"line":30,"column":1}}},"severity":"INFO"}
{"message":"Eta reduction proposed. It's recommended to rewrite 'fun i -> return i' as \n'return'","location":{"path":"KreML/lib/middle_end/Alpha_transformer.ml","range":{"start":{"line":113,"column":1}}},"severity":"INFO"}
