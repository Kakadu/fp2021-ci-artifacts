{"message":"File 'KreML/lib/Utils.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/lib/Ast_printer.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/lib/Ast_printer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/test/Parser_test.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/test/Parser_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'KreML/test/Inferencer_test.ml' doesn't have corresponding .mli interface","location":{"path":"KreML/test/Inferencer_test.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"KreML/lib/Utils.ml","range":{"start":{"line":7,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":108,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":159,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":164,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":193,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":205,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":231,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":241,"column":1}}},"severity":"INFO"}
{"message":"Unsafe ingore. It's recommended to rewrite it as 'let (_: Llvm.llvalue) = build_br merge_bb builder'","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":289,"column":1}}},"severity":"INFO"}
{"message":"Unsafe ingore. It's recommended to rewrite it as 'let (_: Llvm.llvalue) = build_br merge_bb builder'","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":292,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":296,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":300,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":303,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":307,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":367,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":374,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":389,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":437,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":442,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"KreML/lib/llvm/Llvm_codegen.ml","range":{"start":{"line":447,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if ... then false' smells bad\n","location":{"path":"KreML/lib/Inferencer.ml","range":{"start":{"line":319,"column":1}}},"severity":"INFO"}
