{"message":"File 'SMLEqTypesValRestr/lib/typing.ml' doesn't have corresponding .mli interface","location":{"path":"SMLEqTypesValRestr/lib/typing.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'SMLEqTypesValRestr/lib/result.ml' doesn't have corresponding .mli interface","location":{"path":"SMLEqTypesValRestr/lib/result.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'SMLEqTypesValRestr/lib/interpreter.ml' doesn't have corresponding .mli interface","location":{"path":"SMLEqTypesValRestr/lib/interpreter.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"SMLEqTypesValRestr/lib/parser.ml","range":{"start":{"line":44,"column":1}}},"severity":"INFO"}
{"message":"Using generic equality for type list and other algebraic data types is not recommended. Use pattern matching","location":{"path":"SMLEqTypesValRestr/lib/interpreter.ml","range":{"start":{"line":112,"column":1}}},"severity":"INFO"}
