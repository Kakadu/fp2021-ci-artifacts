{"message":"File 'OCaml-with-variants/lib/utils.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/repl.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/repl.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/inter.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/infer.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/infer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/demos/simpleFuncs.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO"}
{"message":"Antipattern: error swallowing","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":67,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":75,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":37,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":37,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":122,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":148,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":100,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":124,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'Rec' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":8,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'NonRec' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":9,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Declaration' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":52,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Application' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":53,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
