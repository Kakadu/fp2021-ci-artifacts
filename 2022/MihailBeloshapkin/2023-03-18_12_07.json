{"message":"File 'OCaml-with-variants/lib/utils.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/repl.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/repl.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/inter.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml-with-variants/lib/infer.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml-with-variants/lib/infer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/demos/simpleFuncs.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO"}
{"message":"Antipattern: error swallowing","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":67,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/utils.ml","range":{"start":{"line":75,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":37,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":37,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":122,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/parser.ml","range":{"start":{"line":148,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":100,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"OCaml-with-variants/lib/inter.ml","range":{"start":{"line":124,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'Rec' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":8,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'NonRec' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":9,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Int' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":12,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Float' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":13,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'String' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":14,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Bool' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":15,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'AddInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":19,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'SubInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":20,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'MulInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":21,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'DivInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":22,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'AddFloat' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":23,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'SubFloat' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":24,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'MulFloat' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":25,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'DivFloat' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":26,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'And' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":27,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Or' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":28,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'LeqInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":29,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'GeqInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":30,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'EqInt' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":31,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_fun' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_letbinding' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":35,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_ident' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":36,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_literal' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":37,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_seq' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":38,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_apply' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":39,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_binop' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":40,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_ifthenelse' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":41,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_match' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":42,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_polyvar' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":43,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Exp_unit' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":44,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Declaration' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":51,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Application' has no documentation attribute","location":{"path":"OCaml-with-variants/lib/ast.mli","range":{"start":{"line":52,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
