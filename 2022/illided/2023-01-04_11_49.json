{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/utils.ml","range":{"start":{"line":14,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/utils.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Ruby/lib/parser.ml","range":{"start":{"line":241,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{ empty_state with class_scopes = (st.class_scopes) }'","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":54,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{\n                     st with\n                     local_vars =\n                       (Base.Map.set st.local_vars ~key:name ~data:new_v)\n                   }'","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":59,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":64,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{ st with class_scopes = ([init_state] @ st.class_scopes)\n                   }'","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":72,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":92,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":92,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as 'st'","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":93,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":130,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":145,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":145,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":208,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":218,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":218,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":219,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":316,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":319,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":347,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":347,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":389,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":389,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":390,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":407,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":411,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":413,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":416,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":417,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Ruby/lib/interpret.ml","range":{"start":{"line":418,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'TopLevel' has no documentation attribute","location":{"path":"Ruby/lib/ast.mli","range":{"start":{"line":33,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Method' has no documentation attribute","location":{"path":"Ruby/lib/ast.mli","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/ast.mli","range":{"start":{"line":41,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/ast.mli","range":{"start":{"line":44,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Ruby/lib/ast.mli","range":{"start":{"line":51,"column":1}}},"severity":"INFO"}
