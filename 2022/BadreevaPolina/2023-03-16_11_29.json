{"message":"File 'CSharpExc/lib/types_setup.ml' doesn't have corresponding .mli interface","location":{"path":"CSharpExc/lib/types_setup.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'CSharpExc/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"CSharpExc/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'CSharpExc/lib/interpreter.ml' doesn't have corresponding .mli interface","location":{"path":"CSharpExc/lib/interpreter.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"OCaml files should start from copyright and license information","location":{"path":"CSharpExc/REPL.ml","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"OCaml files should start from copyright and license information","location":{"path":"CSharpExc/REPL.ml","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"CSharpExc/lib/types_setup.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"CSharpExc/lib/parser.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"CSharpExc/lib/interpreter.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Rewrite record as '{\n                     var_context with\n                     assignment_count = 0;\n                     is_const = (is_const modifier);\n                     var_value = (get_base_value vars_type);\n                     var_key = var_name;\n                     var_type = vars_type\n                   }'","location":{"path":"CSharpExc/lib/interpreter.ml","range":{"start":{"line":556,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{\n                     expr_context with\n                     assignment_count = 1;\n                     is_const = (is_const modifier);\n                     var_value = (expr_context.last_result);\n                     var_key = var_name;\n                     var_type = var_expr_type\n                   }'","location":{"path":"CSharpExc/lib/interpreter.ml","range":{"start":{"line":572,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{\n                     method_s with\n                     decrement = [];\n                     increment = [];\n                     level = 0;\n                     count_cycles = 0;\n                     runtime_flag = NoFlag;\n                     last_result = Void';\n                     var_map = new_var_map\n                   }'","location":{"path":"CSharpExc/lib/interpreter.ml","range":{"start":{"line":843,"column":1}}},"severity":"INFO"}
{"message":"Type name `objectRefers` should be in snake case","location":{"path":"CSharpExc/lib/ast.ml","range":{"start":{"line":31,"column":1}}},"severity":"INFO","code":{"value":"camel_cased_types","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Type name `binOps` should be in snake case","location":{"path":"CSharpExc/lib/ast.ml","range":{"start":{"line":36,"column":1}}},"severity":"INFO","code":{"value":"camel_cased_types","url":"https://kakadu.github.io/zanuda/"}}
