{"message":"File 'Bash/lib/utils.ml' doesn't have corresponding .mli interface","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Bash/lib/tests.ml' doesn't have corresponding .mli interface","location":{"path":"Bash/lib/tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Bash/lib/interpret.ml' doesn't have corresponding .mli interface","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Bash/lib/bash_lib.ml-gen' doesn't have corresponding .mli interface","location":{"path":"Bash/lib/bash_lib.ml-gen","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"Bash/demos/demoInterpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"Bash/demos/demoInterpret.ml","range":{"start":{"line":2,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":24,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":25,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Bash/lib/utils.ml","range":{"start":{"line":27,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/parser.ml","range":{"start":{"line":169,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/parser.ml","range":{"start":{"line":169,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/parser.ml","range":{"start":{"line":308,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/parser.ml","range":{"start":{"line":308,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":71,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":112,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":113,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":188,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":201,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":256,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":344,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Bash/lib/interpret.ml","range":{"start":{"line":347,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":25,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":25,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":57,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":57,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":65,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":117,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":117,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":129,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":129,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":137,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":137,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":176,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":176,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":198,"column":1}}},"severity":"INFO"}
{"message":"Conjunction with boolean smells smells bad\n","location":{"path":"Bash/lib/ast.ml","range":{"start":{"line":198,"column":1}}},"severity":"INFO"}
