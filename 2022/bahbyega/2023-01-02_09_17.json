{"message":"File 'OCamlLabeledArgs/lib/tests.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/repl.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/prettyprint.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/prettyprint.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/interpret.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/errors.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/errors.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.ml","range":{"start":{"line":18,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.mli","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.mli","range":{"start":{"line":24,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/prettyprint.ml","range":{"start":{"line":94,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":120,"column":1}}},"severity":"INFO"}
