{"message":"File 'OCamlLabeledArgs/lib/tests.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/repl.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/prettyprint.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/prettyprint.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/interpret.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCamlLabeledArgs/lib/errors.ml' doesn't have corresponding .mli interface","location":{"path":"OCamlLabeledArgs/lib/errors.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.ml","range":{"start":{"line":18,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.mli","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/typedtree.mli","range":{"start":{"line":24,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":15,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":25,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":35,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":47,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":60,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":73,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":89,"column":1}}},"severity":"INFO"}
{"message":"Concatenating multiple strings at once (`a^b^c`) has a perfomance issue.\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":107,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":622,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if ... then true' smells bad\n","location":{"path":"OCamlLabeledArgs/lib/tests.ml","range":{"start":{"line":632,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":19,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/repl.ml","range":{"start":{"line":56,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/prettyprint.ml","range":{"start":{"line":94,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'ArgNoLabel' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'ArgLabeled' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":35,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'ArgOptional' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":36,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Help' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":60,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Quit' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":61,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Use' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":62,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Definition' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":65,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Expression' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":66,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Command' has no documentation attribute","location":{"path":"OCamlLabeledArgs/lib/parsetree.mli","range":{"start":{"line":67,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Identifier `_mod` used somewhere else but supposed to be unused.","location":{"path":"OCamlLabeledArgs/lib/parser.ml","range":{"start":{"line":90,"column":1}}},"severity":"INFO","code":{"value":"var_should_not_be_used","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":50,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":90,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"OCamlLabeledArgs/lib/interpret.ml","range":{"start":{"line":122,"column":1}}},"severity":"INFO"}
