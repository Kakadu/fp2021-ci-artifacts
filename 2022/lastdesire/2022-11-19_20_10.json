{"message":"File 'Menhir/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Menhir/lib/interpret.ml' doesn't have corresponding .mli interface","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":59,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if ... then true' smells bad\n","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":60,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":70,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":72,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":73,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":73,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":74,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":80,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":82,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":83,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":83,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":84,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":85,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":93,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":97,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":112,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":116,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":116,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":124,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standart tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"Menhir/lib/parser.ml","range":{"start":{"line":125,"column":1}}},"severity":"INFO"}
{"message":"Using generic equality for type list and other algebraic data types is not recommended. Use pattern matching","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":33,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":38,"column":1}}},"severity":"INFO"}
{"message":"Antipattern: error swallowing","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":44,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Menhir/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":114,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if ... then .. else true' smells bad\n","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":117,"column":1}}},"severity":"INFO"}
{"message":"Using generic equality for type list and other algebraic data types is not recommended. Use pattern matching","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":135,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":172,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":185,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":195,"column":1}}},"severity":"INFO"}
{"message":"Using failwith unsafely","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":202,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Menhir/lib/interpret.ml","range":{"start":{"line":210,"column":1}}},"severity":"INFO"}
