{"message":"File 'Scheme_delim_cc/lib/utils.ml' doesn't have corresponding .mli interface","location":{"path":"Scheme_delim_cc/lib/utils.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Scheme_delim_cc/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"Scheme_delim_cc/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Scheme_delim_cc/lib/env.ml' doesn't have corresponding .mli interface","location":{"path":"Scheme_delim_cc/lib/env.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Scheme_delim_cc/lib/interpreter.ml","range":{"start":{"line":237,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"Scheme_delim_cc/lib/interpreter.ml","range":{"start":{"line":254,"column":1}}},"severity":"INFO"}
