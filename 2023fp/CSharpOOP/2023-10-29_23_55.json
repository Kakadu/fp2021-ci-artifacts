{"message":"Using `function` is recommended","location":{"path":"CSharpOOP/lib/parser.ml","range":{"start":{"line":101,"column":1}}},"severity":"INFO"}
{"message":"Antipattern: error swallowing","location":{"path":"CSharpOOP/lib/parser.ml","range":{"start":{"line":52,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"CSharpOOP/lib/parser.ml","range":{"start":{"line":101,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"CSharpOOP/lib/parser.mli","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'ref_type', 'base_type', 'not_nullable_type' as follows:\ntype ref_type =\n  | TString \n  | TClass \n  | TInterface \ntype base_type =\n  | TInt \n  | TChar \n  | TBool \ntype not_nullable_type =\n  | TBase of base_type \n  | TRef of ref_type ","location":{"path":"CSharpOOP/lib/ast.ml","range":{"start":{"line":13,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'field', 'methods', 'member' as follows:\ntype field =\n  | Field of types * name * expr option \ntype methods =\n  | Main \n  | Method of method_modifier list option * types * name * expr * expr \ntype member =\n  | CField of field \n  | CMethod of methods ","location":{"path":"CSharpOOP/lib/ast.ml","range":{"start":{"line":77,"column":1}}},"severity":"INFO"}
