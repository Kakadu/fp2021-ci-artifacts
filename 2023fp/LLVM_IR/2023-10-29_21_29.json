{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":66,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":71,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":76,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":81,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":115,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":120,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":125,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":130,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":135,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":140,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":175,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":180,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":185,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":298,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":306,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":314,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":322,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":330,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":339,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":352,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":364,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":372,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":380,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":388,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":450,"column":1}}},"severity":"INFO"}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":520,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":527,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":534,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":544,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":555,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":566,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":576,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":586,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":594,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":602,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":610,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":619,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":628,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Toplevel eval not recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":672,"column":1}}},"severity":"INFO","code":{"value":"no_toplevel_eval","url":"https://kakadu.github.io/zanuda/"}}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":450,"column":1}}},"severity":"INFO"}
{"message":"Using `let ... in` is recommended","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":451,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{ annot with basic_blocks = bbs }'","location":{"path":"LLVM_IR/lib/parser.ml","range":{"start":{"line":724,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"LLVM_IR/lib/parser.mli","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/parser.mli","range":{"start":{"line":2,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TVoid' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":2,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TFloat' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":3,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TInteger' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TPointer' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":5,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TVector' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":6,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TArr' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":7,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TStruct' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":8,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TLabel' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":9,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'TFunc' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":10,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'LocalVar' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":14,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'GlobalVar' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":14,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'PointerGlob' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":15,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'PointerInt' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":15,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CVoid' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":17,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CInteger' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":18,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CFloat' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":19,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CPointer' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":20,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CVector' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":21,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CArr' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":22,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CStruct' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":23,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CLabel' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":24,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'CFunc' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":25,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'FromVariable' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":26,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Const' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":26,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Ret' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":28,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Br' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":29,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'BrCond' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":30,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Mul' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":33,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Sub' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":34,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Icmp' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":36,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Call' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":37,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Alloca' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":40,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Store' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":41,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Load' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":42,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Terminator' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":44,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Binary' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":45,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'Other' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":46,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Constructor 'MemoryAddress' has no documentation attribute","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":47,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"LLVM_IR/lib/ast.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/ast.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'pointer_const', 'func', 'basic_block', 'const', 'value', 'terminator_instruction', 'binary_operation_body', 'binary_operation', 'other_operation', 'align', 'memory_address_inst', 'instruction' as follows:\ntype pointer_const =\n  | PointerGlob of variable \n  | PointerInt of int [@@deriving show { with_path = false }]\ntype func =\n  {\n  parameters: variable list ;\n  basic_blocks: (variable * const) list }[@@deriving\n                                           show { with_path = false }]\ntype basic_block = instruction list[@@deriving show { with_path = false }]\ntype const =\n  | CVoid \n  | CInteger of int * int [@ocaml.doc \" size and value\"]\n  | CFloat of float \n  | CPointer of pointer_const \n  | CVector of const list \n  | CArr of const list \n  | CStruct of const list \n  | CLabel of basic_block \n  | CFunc of func [@@deriving show { with_path = false }]\ntype value =\n  | FromVariable of variable * tp \n  | Const of const [@@deriving show { with_path = false }]\ntype terminator_instruction =\n  | Ret of tp * value [@ocaml.doc \" ret <type> <value> \"]\n  | Br of value [@ocaml.doc \" br label <dest> \"]\n  | BrCond of value * value * value\n  [@ocaml.doc \" br i1 <cond>, label <iftrue>, label <iffalse> \"][@@deriving\n                                                                  show\n                                                                    {\n                                                                    with_path\n                                                                    = false\n                                                                    }]\ntype binary_operation_body = (variable * tp * value * value)[@@deriving\n                                                              show\n                                                                {\n                                                                  with_path =\n                                                                    false\n                                                                }]\ntype binary_operation =\n  | Mul of binary_operation_body \n  | Sub of binary_operation_body [@@deriving show { with_path = false }]\ntype other_operation =\n  | Icmp of variable * string * tp * value * value\n  [@ocaml.doc \" <result> = icmp <cond> <ty> <op1>, <op2> \"]\n  | Call of variable * tp * value * value list\n  [@ocaml.doc \" <result> = call <ty> <fnptrval>(<function args>) \"]\ntype align = int\ntype memory_address_inst =\n  | Alloca of variable * tp * value * align\n  [@ocaml.doc\n    \" <result> = alloca <type> [, <ty> <NumElements>] [, align <alignment>] \"]\n  | Store of tp * value * value * align\n  [@ocaml.doc \" store <ty> <value>, ptr <pointer>[, align <alignment>] \"]\n  | Load of variable * tp * value * align\n  [@ocaml.doc \" <result> = load <ty>, ptr <pointer>[, align <alignment>]\"]\ntype instruction =\n  | Terminator of terminator_instruction \n  | Binary of binary_operation \n  | Other of other_operation \n  | MemoryAddress of memory_address_inst [@@deriving\n                                           show { with_path = true }]","location":{"path":"LLVM_IR/lib/ast.ml","range":{"start":{"line":21,"column":1}}},"severity":"INFO"}
{"message":" First item in file should be a documentation comment with copyright information. For example:\n            (** Copyright 2021-2022, Winnie Pooh et al. *)","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":1,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":11,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'pointer_const', 'func', 'basic_block', 'const', 'value', 'terminator_instruction', 'binary_operation_body', 'binary_operation', 'other_operation', 'align', 'memory_address_inst', 'instruction' as follows:\ntype pointer_const =\n  | PointerGlob of variable \n  | PointerInt of int \ntype func =\n  {\n  parameters: variable list ;\n  basic_blocks: (variable * const) list }\ntype basic_block = instruction list\ntype const =\n  | CVoid \n  | CInteger of int * int \n  | CFloat of float \n  | CPointer of pointer_const \n  | CVector of const list \n  | CArr of const list \n  | CStruct of const list \n  | CLabel of basic_block \n  | CFunc of func \ntype value =\n  | FromVariable of variable * tp \n  | Const of const \ntype terminator_instruction =\n  | Ret of tp * value \n  | Br of value \n  | BrCond of value * value * value \ntype binary_operation_body = (variable * tp * value * value)\ntype binary_operation =\n  | Mul of binary_operation_body \n  | Sub of binary_operation_body \ntype other_operation =\n  | Icmp of variable * string * tp * value * value \n  | Call of variable * tp * value * value list \ntype align = int\ntype memory_address_inst =\n  | Alloca of variable * tp * value * align \n  | Store of tp * value * value * align \n  | Load of variable * tp * value * align \ntype instruction =\n  | Terminator of terminator_instruction \n  | Binary of binary_operation \n  | Other of other_operation \n  | MemoryAddress of memory_address_inst ","location":{"path":"LLVM_IR/lib/ast.mli","range":{"start":{"line":14,"column":1}}},"severity":"INFO"}
