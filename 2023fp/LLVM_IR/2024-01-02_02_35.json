{"message":"File 'LLVM_IR/lib/main.ml' doesn't have corresponding .mli interface","location":{"path":"LLVM_IR/lib/main.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/afterParseCheck/test.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `let ... in` is recommended","location":{"path":"LLVM_IR/lib/afterParseCheck/ssaCheck.ml","range":{"start":{"line":134,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/memory.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/vector.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/unary.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/terminator.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/other.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":33,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":53,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":63,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Executing 'if true' smells bad\n","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":19,"column":1}}},"severity":"INFO"}
{"message":"Executing 'if true' smells bad\n","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":26,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":33,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":53,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.ml","range":{"start":{"line":63,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/memoryAddress.mli","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/conversion.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/conversion.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/conversion.ml","range":{"start":{"line":22,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/bitwise.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/bitwise.mli","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/binary.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/aggregate.ml","range":{"start":{"line":8,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/instructions/aggregate.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using `function` is recommended","location":{"path":"LLVM_IR/lib/interpreter/instructions/aggregate.ml","range":{"start":{"line":8,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/interpreter/interpreting.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"LLVM_IR/lib/main.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Rewrite record as '{ annot with basic_blocks = bbs; ftp = (annot.tp) }'","location":{"path":"LLVM_IR/lib/parser/parsing.ml","range":{"start":{"line":101,"column":1}}},"severity":"INFO"}
