{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'expression' as follows:\ntype expression =\n  | Const of value [@ocaml.doc \" A constant that holds value \"]\n  | Variable of modifier * identifier\n  [@ocaml.doc \" Variable with a scope and its identifier \"]\n  | ArithOp of arith_op * expression * expression\n  [@ocaml.doc\n    \" Arithmetic operation that consists of an operator and operands \"]\n  | BoolOp of bool_op * expression * expression\n  [@ocaml.doc\n    \" Logical operation that consists of an operator and operands \"]\n  | FunctionCall of identifier * expression list\n  [@ocaml.doc \" A function call with its arguments \"]\n  | List of expression list [@ocaml.doc \" A list expression \"]\n  | Field of identifier * identifier [@ocaml.doc \" A class field x.field \"]\n  | MethodCall of identifier * identifier * expression list\n  [@ocaml.doc \" A method call class.method() \"]\n  | Lambda of identifier list * expression\n  [@ocaml.doc \" Anonymous function \"]\n  | Object of identifier * expression list\n  [@ocaml.doc \" Instance of a class \"]\n  | FString of f_string_type list [@ocaml.doc \" F string \"]","location":{"path":"Python/lib/ast.mli","range":{"start":{"line":55,"column":1}}},"severity":"INFO"}
