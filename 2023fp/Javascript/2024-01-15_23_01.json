{"message":"File 'Javascript/lib/WATnWtfjsTests.ml' doesn't have corresponding .mli interface","location":{"path":"Javascript/lib/WATnWtfjsTests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Javascript/lib/parserTests.ml' doesn't have corresponding .mli interface","location":{"path":"Javascript/lib/parserTests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'Javascript/lib/interpreterTests.ml' doesn't have corresponding .mli interface","location":{"path":"Javascript/lib/interpreterTests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Unneeded mutual recursion detected in these type declarations. It's recommended to rewrite 'obj_type', 'obj_ctx', 'ctx' as follows:\ntype obj_type =\n  | TFunPreset of (ctx -> value list -> int option -> (ctx * value option) t)\n  \n  | TFunction of fun_ctx \n  | TArrowFunction of fun_ctx \n  | TArray of value option list \n  | TObject \nand obj_ctx = {\n  proto: value ;\n  fields: let_ctx list ;\n  obj_type: obj_type }\nand ctx =\n  {\n  lex_env_count: int ;\n  cur_lex_env: int ;\n  lex_envs: lexical_env IntMap.t ;\n  obj_count: int ;\n  objs: obj_ctx IntMap.t ;\n  proto_objs: proto_objs ;\n  vreturn: value option ;\n  stdout: string }","location":{"path":"Javascript/lib/VTypes.mli","range":{"start":{"line":47,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Using nested if expressions more than three layers deep is a bad practice. Use let statements or helper methods or rethinking logic.","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":42,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Bad measurement of a list (with non-negative size)\nBetween 'List.length fields' and '0'.","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":143,"column":1}}},"severity":"INFO"}
{"message":"Bad measurement of a list (with non-negative size)\nBetween 'List.length array' and '0'.","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":152,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"Javascript/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Rewrite record as '{ x with value = v; var_id = (x.var_identifier) }'","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":908,"column":1}}},"severity":"INFO"}
{"message":"Using `function` is recommended","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":955,"column":1}}},"severity":"INFO"}
{"message":"Rewrite record as '{ ctx with return = ret }'","location":{"path":"Javascript/lib/interpreter.ml","range":{"start":{"line":961,"column":1}}},"severity":"INFO"}
