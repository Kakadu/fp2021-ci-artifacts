{"message":"File 'OCaml_ExtensibleVariantTypes/lib/typing.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml_ExtensibleVariantTypes/lib/typing.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml_ExtensibleVariantTypes/lib/parser.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml_ExtensibleVariantTypes/lib/parser.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml_ExtensibleVariantTypes/lib/interpreter.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml_ExtensibleVariantTypes/lib/interpreter.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml_ExtensibleVariantTypes/lib/inferencer.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml_ExtensibleVariantTypes/lib/inferencer.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"File 'OCaml_ExtensibleVariantTypes/lib/tests.ml' doesn't have corresponding .mli interface","location":{"path":"OCaml_ExtensibleVariantTypes/lib/tests.ml","range":{"start":{"line":1,"column":1}}},"severity":"INFO"}
{"message":"Second item in file should be a documentation comment with correct license information. For example:\n           (** SPDX-License-Identifier: LGPL-3.0-or-later *)","location":{"path":"OCaml_ExtensibleVariantTypes/lib/typing.ml","range":{"start":{"line":4,"column":1}}},"severity":"INFO","code":{"value":"top_file_license","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"OCaml_ExtensibleVariantTypes/_none_","range":{"start":{"line":0,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
