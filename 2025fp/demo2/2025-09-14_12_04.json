{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"demo2/bin/REPL.ml","range":{"start":{"line":67,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"demo2/bin/REPL.ml","range":{"start":{"line":68,"column":1}}},"severity":"INFO"}
{"message":"Using mutable data structures for teaching purposes is usually discouraged. Replace Hashtables by standard tree-like maps or consider Hash-Array Mapped Tries (HAMT). Use mutable `ref`erences and mutable structure fields only if it is really required. In all places where it is needed indeed, describe in a comment why it is needed there.","location":{"path":"demo2/bin/REPL.ml","range":{"start":{"line":69,"column":1}}},"severity":"INFO"}
{"message":"Prefer guard instead of if-then-else in case construction","location":{"path":"demo2/lib/Pprintast.ml","range":{"start":{"line":23,"column":1}}},"severity":"INFO","code":{"value":"use_guard_instead_of_if","url":"https://kakadu.github.io/zanuda/"}}
{"message":"Executing 'if true' smells bad\n","location":{"path":"demo2/lib/interpret.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Using `failwith` (or `assert false`) usually is a clue that a corner case is not being handled properly. To report errors we recommend using error monad instead. In princliple, these construction are OK for temporary work-in-progress code, but in release they should be eliminated","location":{"path":"demo2/lib/interpret.ml","range":{"start":{"line":20,"column":1}}},"severity":"INFO"}
{"message":"Constructor 'App' has no documentation attribute","location":{"path":"demo2/lib/ast.mli","range":{"start":{"line":15,"column":1}}},"severity":"INFO","code":{"value":"no_docs_parsetree","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"demo2/lib/tests.ml","range":{"start":{"line":26,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"demo2/lib/tests.ml","range":{"start":{"line":31,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"demo2/lib/tests.ml","range":{"start":{"line":36,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
{"message":"A test without description. Try `let%expect_test \"name\" = ...","location":{"path":"demo2/lib/tests.ml","range":{"start":{"line":41,"column":1}}},"severity":"INFO","code":{"value":"expect_tests_no_names","url":"https://kakadu.github.io/zanuda/"}}
